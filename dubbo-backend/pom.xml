<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.kob</groupId>
    <artifactId>dubbo-backend</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging> <!-- 打包类型，这里指定为 POM，表明这是一个聚合模块 -->
    <name>dubbo-backend</name>
    <description>dubbo-backend</description>
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <dubbo.version>3.2.0</dubbo.version>
        <spring-boot.version>2.7.18</spring-boot.version>
        <spring-security.version>3.2.1</spring-security.version>
        <mybatis-plus.version>3.5.5</mybatis-plus.version>
        <maven.compiler.source>1.8</maven.compiler.source> <!-- 源代码使用的Java版本 -->
        <maven.compiler.target>1.8</maven.compiler.target> <!-- 目标Java版本 -->
    </properties>

    <!-- 指定子模块，Maven会递归构建这些子模块 -->
    <modules>
        <module>backend</module>
        <module>matching-system-service</module>
        <module>matching-system-api</module>
    </modules>

    <!-- 依赖管理，用来统一管理项目中所有子模块的依赖版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot的依赖管理 -->
            <dependency>
                <!--
                    groupId 和 artifactId 指定了要导入的 POM 文件的坐标。
                    这里的 org.springframework.boot:spring-boot-dependencies 是 Spring Boot 提供的一个特殊的 POM 文件，
                    它包含了 Spring Boot 所有支持的依赖库的版本信息。
                -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>

                <!--
                    version 元素指定了要导入的 Spring Boot 版本。
                    这里使用了属性引用 ${spring-boot.version}，你需要在 <properties> 部分定义该属性的值，
                    例如 <spring-boot.version>2.7.6</spring-boot.version>。
                -->
                <version>${spring-boot.version}</version>

                <!--
                    type 元素指定了依赖的类型为 pom，表示这是一个 POM 文件，而不是默认的 JAR 文件。
                    这里的 pom 类型表明我们要导入的是一个 POM 文件中的依赖管理信息。
                -->
                <type>pom</type>

                <!--
                    scope 元素指定了依赖的作用范围为 import，表示要从这个 POM 文件中导入依赖管理信息。
                    import 范围与 <dependencyManagement> 元素结合使用，用于导入外部的 POM 文件中的依赖管理配置。
                    这样，当前项目就可以继承 spring-boot-dependencies 中定义的依赖版本信息。
                -->
                <scope>import</scope>
            </dependency>
            <!-- Spring Security的依赖管理 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-security.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- mybatis-plus的依赖管理 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>

            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>


            <!-- Dubbo的依赖管理 -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-bom</artifactId>
                <version>${dubbo.version}</version> <!-- 引入Dubbo依赖的版本 -->
                <type>pom</type> <!-- 类型为POM -->
                <scope>import</scope> <!-- 作用范围为import，表明从该POM文件导入依赖管理信息 -->
            </dependency>

            <!-- Dubbo与ZooKeeper集成的依赖管理 -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-dependencies-zookeeper-curator5</artifactId>
                <version>${dubbo.version}</version> <!-- 引入Dubbo ZooKeeper集成依赖的版本 -->
                <type>pom</type> <!-- 类型为POM -->
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 构建配置 -->
    <build>
        <pluginManagement>
            <!-- 插件管理，用于管理插件的版本和配置 -->
            <plugins>
                <!-- Spring Boot Maven插件，用于简化Spring Boot应用的打包和运行 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version> <!-- 插件版本 -->
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


</project>
